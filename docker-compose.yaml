version: '3'
services:

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: chsm
      MONGO_INITDB_ROOT_PASSWORD: chsm
    ports:
      - "27017:27017"
    volumes:
      - /:/data/mongo
    networks:
      - server-network
    restart: always

  portainer:
    image: portainer/portainer
    volumes:
      - /:/data/portainer
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - server-network
    ports:
      - "9000:9000"
    restart: always

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - server-network
    volumes:
      - /:/data/redis
    restart: always
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  spark:
    image: docker.io/bitnami/spark:3
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8080:8081'
    networks:
      - server-network
    restart: always
  spark-worker-1:
    image: docker.io/bitnami/spark:3
    restart: always
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no

  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "15432:5432"
    volumes:
      - /:/var/lib/postgresql/data
    networks:
      - server-network
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "16543:80"
    depends_on:
      - postgres
    networks:
      - server-network
    restart: always

networks:
  server-network:
    driver: bridge
